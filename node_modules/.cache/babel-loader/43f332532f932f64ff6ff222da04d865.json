{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\project4.0\\\\src\\\\components\\\\Signin\\\\SigninUserForm.js\";\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, SubmitBtn } from 'react-formik-ui';\nimport { withRouter } from 'react-router-dom';\n\nclass SigninForm extends Component {\n  constructor(props) {\n    super(props); // const alert = \"\";\n    // props.alert = \"\";\n\n    this.onSubmit = values => {\n      this.signinUserSubmit(values);\n    };\n\n    this.signinUserSubmit = values => {\n      return fetch('https://fototripr.com/api/v1/Users/Authenticate', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: values.email,\n          password: values.password\n        })\n      }).then(response => {\n        if (response.ok) {\n          this.setState({\n            invalidWarning: \"\"\n          });\n          response.json().then(data => {\n            this.props.history.push({\n              pathname: '/all-trips',\n              state: {\n                userId: data.result.id,\n                token: data.result.token,\n                isLoggedIn: true\n              }\n            });\n          });\n          this.setState({\n            alertType: \"pass\",\n            alertMsg: \"Log in Successfully\"\n          });\n        } else {\n          //  console.log(\"login failed\");\n          this.setState({\n            alertType: \"warn\",\n            alertMsg: \"Username or password is incorrect\"\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      alertType: \"none\",\n      alertMsg: \"\"\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          alertType = _this$state.alertType,\n          alertMsg = _this$state.alertMsg;\n\n    const getSchema = () => {\n      this.setState({\n        invalidWarning: \"\"\n      });\n      return yup.object().shape({\n        email: yup.string().required('Email is required'),\n        password: yup.string().required('Password is required')\n      });\n    };\n\n    return React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: getSchema // validate={checkSchema}\n      ,\n      onSubmit: this.onSubmit,\n      render: () => {\n        return React.createElement(Form, {\n          mode: \"structured\",\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"fieldset\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"alert \".concat(alertType),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, alertMsg), React.createElement(\"h1\", {\n          className: \"form__title\",\n          style: {\n            fontSize: '2em',\n            textTransform: 'uppercase'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Signin\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"error\",\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, this.state.invalidWarning), React.createElement(\"br\", {\n          style: {\n            visibility: 'hidden'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(SubmitBtn, {\n          className: \"form__submit-btn\",\n          children: \"Signin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(SigninForm);","map":{"version":3,"sources":["E:\\work\\project4.0\\src\\components\\Signin\\SigninUserForm.js"],"names":["React","Component","Formik","yup","Form","Input","SubmitBtn","withRouter","SigninForm","constructor","props","onSubmit","values","signinUserSubmit","fetch","method","headers","Accept","body","JSON","stringify","email","password","then","response","ok","setState","invalidWarning","json","data","history","push","pathname","state","userId","result","id","token","isLoggedIn","alertType","alertMsg","catch","err","console","log","render","getSchema","object","shape","string","required","fontSize","textTransform","color","visibility"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, SubmitBtn } from 'react-formik-ui';\nimport { withRouter } from 'react-router-dom';\n\nclass SigninForm extends Component {\n  constructor(props) {\n    super(props);\n    // const alert = \"\";\n    // props.alert = \"\";\n    this.state = {\n      alertType: \"none\",\n      alertMsg: \"\"\n\n    };\n  }\n  onSubmit = (values) => {\n    this.signinUserSubmit(values);\n  };\n\n  signinUserSubmit = (values) => {\n    return fetch('https://fototripr.com/api/v1/Users/Authenticate', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: values.email,\n        password: values.password\n      })\n    })\n      .then((response) => {\n        \n        if (response.ok) {        \n          this.setState({invalidWarning: \"\"});\n          response.json().then((data) => {\n            this.props.history.push({\n              pathname: '/all-trips',\n              state: {\n                userId: data.result.id,\n                token: data.result.token,\n                isLoggedIn: true\n              }\n            });\n          });\n          this.setState({alertType: \"pass\", alertMsg: \"Log in Successfully\"});\n        } else {\n          //  console.log(\"login failed\");\n           this.setState({alertType: \"warn\", alertMsg: \"Username or password is incorrect\"});\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n\n    const { alertType, alertMsg } = this.state;\n    const getSchema = () => {\n      this.setState({invalidWarning: \"\"});\n      return yup.object().shape({\n        email: yup.string().required('Email is required'),\n        password: yup.string().required('Password is required')\n      });\n    };\n\n    return (\n      <Formik\n        initialValues={{\n          email: '',\n          password: ''\n        }}\n        validationSchema={getSchema}\n        // validate={checkSchema}\n        \n        onSubmit={this.onSubmit}\n        render={() => {\n          return (\n            <Form mode=\"structured\" className=\"form\">\n              <fieldset>\n                {            \n                  <div className={`alert ${alertType}`}>{alertMsg}</div>\n                }\n                <h1\n                  className=\"form__title\"\n                  style={{ fontSize: '2em', textTransform: 'uppercase' }}\n                >\n                  Signin\n                </h1>\n                <br />\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                {/* {if(this.state.)} */}\n                <span className=\"error\" style={{ color: 'red'}}>{this.state.invalidWarning}</span>\n                \n                <br style={{visibility: 'hidden'}} />\n\n                <SubmitBtn className=\"form__submit-btn\" children=\"Signin\" />\n                \n              \n              </fieldset>\n            </Form>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default withRouter(SigninForm);\n"]},"metadata":{},"sourceType":"module"}