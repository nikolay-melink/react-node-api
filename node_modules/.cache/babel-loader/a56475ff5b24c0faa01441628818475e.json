{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\project4.0\\\\src\\\\components\\\\Trips\\\\AllTripsPage.js\";\nimport React from 'react';\nimport TripSidebar from './TripSidebar';\nimport logo from '../../images/logoBlack.png';\nimport TripComponent from './TripComponent';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport { TripApi } from \"../../client/api\";\n\nclass AllTripsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.hamburgerClick = () => {\n      document.querySelector('.hamburger--spring').classList.toggle('is-active');\n      document.querySelector('.trip__sidebar').classList.toggle('is-visible');\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      trips: [],\n      activeTrip: null\n    };\n  }\n\n  handleChange(e, id) {\n    const isChecked = e.target.checked;\n\n    if (!isChecked) {\n      this.setState({\n        activeTrip: null\n      });\n    } else {\n      this.setState({\n        activeTrip: id\n      });\n    }\n\n    TripApi.handleChange(e, id);\n  }\n\n  componentDidMount() {\n    const locationState = this.props.history.location.state;\n    TripApi.getAllTripsData(locationState).then(response => {\n      this.setState({\n        isLoaded: true,\n        trips: response.result\n      });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  triggerDelete(trip, token) {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return React.createElement(\"div\", {\n          className: \"custom-ui\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Are you sure?\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"You want to delete this trip?\"), React.createElement(\"button\", {\n          onClick: onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"No\"), React.createElement(\"button\", {\n          trip: this.props.trip,\n          token: this.props.token,\n          onClick: () => {\n            this.handleClickDelete(); //tripId, this.props.history.location.state.token\n            // onClose();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Yes, Delete it!\"));\n      }\n    });\n  }\n\n  triggerReplicate(trip, token) {\n    const locationState = this.props.history.location.state;\n    TripApi.repTripData(locationState, trip).then(response => {// this.setState({\n      //   isLoaded: true,\n      //   trips: response.result\n      // });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  handleClickDelete() {\n    //tripId, token\n    const locationState = this.props.history.location.state;\n    console.log(locationState);\n    TripApi.delTripData(locationState).then(response => {// this.setState({\n      //   isLoaded: true,\n      //   trips: response.result\n      // });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$props$history$l = this.props.history.location.state,\n          isLoggedIn = _this$props$history$l.isLoggedIn,\n          token = _this$props$history$l.token,\n          userId = _this$props$history$l.userId;\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          trips = _this$state.trips,\n          activeTrip = _this$state.activeTrip;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"trip__page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"\",\n        className: \"logo__img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.hamburgerClick,\n        className: \"hamburger hamburger--spring\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"hamburger-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"hamburger-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(TripSidebar, {\n        isLoggedIn: isLoggedIn,\n        token: token,\n        userId: userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"trip__block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"trip__list-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Select a trip to edit:\"), React.createElement(\"ul\", {\n        className: \"trip__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, trips.map((trip, key) => React.createElement(\"li\", {\n        key: trip.id,\n        className: \"trip__list-item \".concat(activeTrip === trip.id ? 'active-trip' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(TripComponent, {\n        activeTrip: activeTrip,\n        handleChange: (e, id) => this.handleChange(e, id),\n        key: key,\n        trip: trip,\n        isLoaded: isLoaded,\n        token: token,\n        userId: userId,\n        isLoggedIn: isLoggedIn,\n        triggerReplicate: (trip, token) => this.triggerReplicate(trip, token),\n        triggerDelete: (trip, token) => this.triggerDelete(trip, token),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\n\nexport default AllTripsPage;","map":{"version":3,"sources":["E:\\work\\project4.0\\src\\components\\Trips\\AllTripsPage.js"],"names":["React","TripSidebar","logo","TripComponent","confirmAlert","TripApi","AllTripsPage","Component","constructor","props","hamburgerClick","document","querySelector","classList","toggle","state","error","isLoaded","trips","activeTrip","handleChange","e","id","isChecked","target","checked","setState","componentDidMount","locationState","history","location","getAllTripsData","then","response","result","catch","triggerDelete","trip","token","customUI","onClose","handleClickDelete","triggerReplicate","repTripData","console","log","delTripData","render","isLoggedIn","userId","message","map","key"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport TripSidebar from './TripSidebar';\n\nimport logo from '../../images/logoBlack.png';\n\nimport TripComponent from './TripComponent';\n\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport { TripApi } from \"../../client/api\";\n\n\nclass AllTripsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      trips: [],\n      activeTrip: null\n    };\n\n  }\n\n  handleChange(e, id) {    \n    const isChecked = e.target.checked;\n    if (!isChecked) {\n      this.setState({ activeTrip: null });\n    } else {\n      this.setState({ activeTrip: id });\n    }\n    TripApi.handleChange(e, id);\n  }\n\n\n  hamburgerClick = () => {\n    document.querySelector('.hamburger--spring').classList.toggle('is-active');\n    document.querySelector('.trip__sidebar').classList.toggle('is-visible');\n  };\n\n  componentDidMount() {\n    const locationState = this.props.history.location.state;\n\n    TripApi.getAllTripsData(locationState).then(response => {\n      this.setState({\n        isLoaded: true,\n        trips: response.result\n      });\n    }).catch((error) => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n\n  }\n\n  triggerDelete(trip, token) {\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className='custom-ui'>\n            <h1>Are you sure?</h1>\n            <p>You want to delete this trip?</p>\n            <button onClick={onClose}>No</button>\n            <button\n              trip={this.props.trip}\n              token={this.props.token}\n              onClick={() => {\n                this.handleClickDelete();//tripId, this.props.history.location.state.token\n                // onClose();\n              }}\n            >\n              Yes, Delete it!\n              </button>\n          </div>\n        );\n      }\n    });\n  };\n\n  triggerReplicate(trip, token) {\n    const locationState = this.props.history.location.state;\n    TripApi.repTripData(locationState, trip).then(response => {\n      // this.setState({\n      //   isLoaded: true,\n      //   trips: response.result\n      // });\n    }).catch((error) => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  };\n\n\n\n\n  handleClickDelete() {//tripId, token\n    const locationState= this.props.history.location.state;\n    console.log(locationState);\n    TripApi.delTripData(locationState).then(response => {\n      // this.setState({\n      //   isLoaded: true,\n      //   trips: response.result\n      // });\n    }).catch((error) => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n\n\n  render() {\n    const { isLoggedIn, token, userId } = this.props.history.location.state;\n    const { error, isLoaded, trips, activeTrip } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"trip__page\">\n          <div className=\"logo\">\n            <img src={logo} alt=\"\" className=\"logo__img\" />\n          </div>\n          <button\n            onClick={this.hamburgerClick}\n            className=\"hamburger hamburger--spring\"\n            type=\"button\"\n          >\n            <span className=\"hamburger-box\">\n              <span className=\"hamburger-inner\"></span>\n            </span>\n          </button>\n          <TripSidebar isLoggedIn={isLoggedIn} token={token} userId={userId} />\n          <div className=\"trip__block\">\n            <h3 className=\"trip__list-title\">Select a trip to edit:</h3>\n            <ul className=\"trip__list\">\n              {trips.map((trip, key) => (\n                <li key={trip.id} className={`trip__list-item ${activeTrip === trip.id ? 'active-trip': '' }`} >\n                  <TripComponent\n                    activeTrip={activeTrip}\n                    handleChange={(e, id) => this.handleChange(e, id)}\n                    key={key}\n                    trip={trip}\n                    isLoaded={isLoaded}\n                    token={token}\n                    userId={userId}\n                    isLoggedIn={isLoggedIn}\n                    triggerReplicate={(trip, token) => this.triggerReplicate(trip, token)}\n                    triggerDelete={(trip, token) => this.triggerDelete(trip, token)} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div >\n      );\n    }\n  }\n}\n\nexport default AllTripsPage;\n"]},"metadata":{},"sourceType":"module"}