{"ast":null,"code":"import _objectSpread2 from \"E:\\\\work\\\\project4.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\work\\\\project4.0\\\\src\\\\components\\\\Trips\\\\AddTripForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, Datepicker, Select, Textarea, Checkbox, SubmitBtn } from 'react-formik-ui';\nimport ImageSelect from './ImageSelect';\nimport ItinerariesList from './ItinerariesList';\nimport AccomodationsList from './AccomodationsList';\nexport class AddTripForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddDayItinerary = e => {\n      e.preventDefault();\n      const count = this.state.itineraryDays.length + 1;\n      this.setState({\n        itineraryDays: [...this.state.itineraryDays, {\n          id: count,\n          name: \"day\".concat(count),\n          label: \"Day \".concat(count)\n        }]\n      });\n    };\n\n    this.handleRemoveDayItinerary = e => {\n      e.preventDefault();\n      this.setState({\n        itineraryDays: this.state.itineraryDays.slice(0, -1)\n      });\n    };\n\n    this.handleAddDayAccomodation = e => {\n      e.preventDefault();\n      const count = this.state.accomodations.length + 1;\n      this.setState({\n        accomodations: [...this.state.accomodations, {\n          id: count,\n          dayStart: \"accomodationDay\".concat(count, \"Start\"),\n          numberOfDays: \"accomodationDays\".concat(count),\n          description: \"accomodationDays\".concat(count, \"Desc\")\n        }]\n      });\n    };\n\n    this.handleRemoveDayAccomodation = e => {\n      e.preventDefault();\n      this.setState({\n        accomodations: this.state.accomodations.slice(0, -1)\n      });\n    };\n\n    this.handleAddPhoto = e => {\n      e.preventDefault();\n      const count = this.state.checkBoxesImages.length + 1;\n      const name = \"cbImg\".concat(count);\n      const imageName = \"img\".concat(count);\n      this.setState({\n        checkBoxesImages: [...this.state.checkBoxesImages, {\n          name,\n          value: false,\n          imageName\n        }]\n      });\n    };\n\n    this.handleRemovePhoto = (e, imageName) => {\n      e.preventDefault();\n      this.setState({\n        checkBoxesImages: this.state.checkBoxesImages.filter(item => item.imageName !== imageName)\n      });\n    };\n\n    this.onSubmit = values => {\n      console.log(\"onSubmit\");\n      this.AddTripSubmit(values);\n    };\n\n    this.state = {\n      itineraryDays: [{\n        id: 1,\n        name: 'day1',\n        label: 'Day 1'\n      }, {\n        id: 2,\n        name: 'day2',\n        label: 'Day 2'\n      }],\n      accomodations: [// {\n        //   id: 1,\n        //   numberOfDays: 'accomodationDays1',\n        //   description: 'accomodationDaysDesc'\n        // }\n      ],\n      checkBoxesAmenities: [{\n        name: 'allMealsIncluded',\n        text: 'All meals',\n        value: false\n      }, {\n        name: 'transfersIncluded',\n        text: 'Transfers',\n        value: false\n      }, {\n        name: 'alcoholIncluded',\n        text: 'Alcoholic Beverages',\n        value: false\n      }, {\n        name: 'flightsIncluded',\n        text: 'Flights',\n        value: false\n      }, {\n        name: 'gratuitiesIncluded',\n        text: 'Gratitude',\n        value: false\n      }],\n      checkBoxesImages: [{\n        name: 'cbImg1',\n        value: false,\n        imageName: 'img1'\n      }, {\n        name: 'cbImg2',\n        value: false,\n        imageName: 'img2'\n      }, {\n        name: 'cbImg3',\n        value: false,\n        imageName: 'img3'\n      }, {\n        name: 'cbImg4',\n        value: false,\n        imageName: 'img4'\n      }],\n      initialValues: {\n        title: '',\n        country: '',\n        destination: '',\n        tourType: '',\n        days: '',\n        description: '',\n        dtStart: '',\n        maxPeople: '',\n        price: '',\n        currency: '',\n        accomodationDays: 1,\n        accomodationDaysDesc: ''\n      }\n    };\n    this.AddTripSubmit = this.AddTripSubmit.bind(this);\n    this.uploadImg = this.uploadImg.bind(this);\n  }\n\n  async uploadImg(pic) {\n    if (pic === undefined) {\n      return {\n        name: ''\n      };\n    }\n\n    const formData = new FormData();\n    formData.append('file', pic);\n    const response = await fetch('https://fototripr.com/api/v1/Images/0', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: formData\n    });\n    return await response.json();\n  }\n\n  async AddTripSubmit(values) {\n    console.log(\"nadd a new trip\");\n    let uploadedProfileImg = '';\n    let profilePics = [];\n    const checkBoxesImages = this.state.checkBoxesImages;\n\n    for (let i = 0; i < checkBoxesImages.length; i++) {\n      if (values[checkBoxesImages[i].imageName].length !== 0) {\n        uploadedProfileImg = await this.uploadImg(values[checkBoxesImages[i].imageName][0]);\n        profilePics.push({\n          photoKey: uploadedProfileImg.name,\n          isCoverPhoto: values[checkBoxesImages[i].name]\n        });\n      }\n    }\n\n    const accomodations = [{\n      dayStart: 1,\n      numberOfDays: values.accomodationDays,\n      description: values.accomodationDaysDesc\n    }].concat(this.state.accomodations.map(item => ({\n      dayStart: values[item.dayStart],\n      numberOfDays: values[item.numberOfDays],\n      description: values[item.description]\n    })));\n    const itinerary = this.state.itineraryDays.map(item => ({\n      day: item.id,\n      description: values[item.name]\n    }));\n    return fetch('http://www.silvanium.com/api/v1/Trips/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: JSON.stringify(_objectSpread2({\n        id: this.props.userId,\n        userId: this.props.userId\n      }, values, {\n        itinerary,\n        accomodations,\n        gallery: profilePics\n      }))\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          this.props.history.push({\n            pathname: '/all-trips',\n            state: {\n              userId: this.props.userId,\n              token: this.props.token,\n              isLoggedIn: this.props.isLoggedIn\n            }\n          });\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.setState(_objectSpread2({}, this.state.initialValues, {}, this.state.checkBoxesImages.reduce((acc, {\n      name,\n      value\n    }) => _objectSpread2({}, acc, {\n      [name]: value\n    }), {}), {}, this.state.checkBoxesAmenities.reduce((acc, {\n      name,\n      value\n    }) => _objectSpread2({}, acc, {\n      [name]: value\n    }), {})));\n  }\n\n  render() {\n    const getSchema = () => {\n      return yup.object().shape({\n        title: yup.string().required('Tour title is required'),\n        country: yup.string().required('Tour country is required'),\n        destination: yup.string().required('Tour city is required'),\n        tourType: yup.string().required('Tour type is required'),\n        days: yup.string().required('Number of Days is required'),\n        dtStart: yup.string().required('Start date is required'),\n        maxPeople: yup.string().required('Maximum people is required'),\n        price: yup.string().required('Price is required'),\n        currency: yup.string().required('Currency is required')\n      });\n    };\n\n    const _this$state = this.state,\n          itineraryDays = _this$state.itineraryDays,\n          accomodations = _this$state.accomodations,\n          checkBoxesImages = _this$state.checkBoxesImages,\n          initialValues = _this$state.initialValues,\n          checkBoxesAmenities = _this$state.checkBoxesAmenities;\n    itineraryDays.forEach(item => {\n      initialValues[item.name] = ''; // initialValues[item.style] = { float: \"left\", textAlign:\"left\", width:\"100%\", display:\"block\"}\n    });\n    accomodations.forEach(item => {\n      initialValues[item.dayStart] = 1;\n      initialValues[item.numberOfDays] = 1;\n      initialValues[item.description] = '';\n    });\n    const keys = Object.keys(initialValues);\n    checkBoxesImages.forEach(item => {\n      if (!keys.includes(item.imageName)) {\n        initialValues[item.imageName] = [];\n      }\n    });\n    return React.createElement(Formik, {\n      enableReinitialize: true,\n      initialValues: initialValues,\n      validationSchema: getSchema,\n      onSubmit: () => {\n        console.log(\"submit\");\n      } // {this.onSubmit}\n      ,\n      render: () => {\n        return React.createElement(Form, {\n          mode: \"structured\",\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(\"fieldset\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, \"Add a new tour\"), React.createElement(\"div\", {\n          className: \"form__title form__title--sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \"General Info\"), React.createElement(\"div\", {\n          className: \"form__container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, \"Tour Title\"), React.createElement(Input, {\n          name: \"title\",\n          placeholder: \"Tour Title*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, \"Select Country\"), React.createElement(Select, {\n          name: \"country\",\n          placeholder: \"Select a Country*\",\n          options: [{\n            value: 'India',\n            label: 'India'\n          }, {\n            value: 'Iceland',\n            label: 'Iceland'\n          }, {\n            value: 'Argentina',\n            label: 'Argentina'\n          }, {\n            value: 'Phuket',\n            label: 'Phuket'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, \"Select a City\"), React.createElement(Select, {\n          name: \"destination\",\n          placeholder: \"Select a City*\",\n          options: [{\n            value: 'Rajasthan',\n            label: 'Rajasthan'\n          }, {\n            value: 'Reykjavik',\n            label: 'Reykjavik'\n          }, {\n            value: 'Beunoes Aires',\n            label: 'Beunoes Aires'\n          }, {\n            value: 'Thailand',\n            label: 'Thailand'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, \"Tour Type\"), React.createElement(Select, {\n          name: \"tourType\",\n          placeholder: \"Tour type*\",\n          options: [{\n            value: 'Easy',\n            label: 'Easy'\n          }, {\n            value: 'Moderate',\n            label: 'Moderate'\n          }, {\n            value: 'Strenuous',\n            label: 'Strenuous'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, \"Number of days\"), React.createElement(Select, {\n          name: \"days\",\n          placeholder: \"Number of days*\",\n          options: [{\n            value: '1',\n            label: '1'\n          }, {\n            value: '2',\n            label: '2'\n          }, {\n            value: '3',\n            label: '3'\n          }, {\n            value: '4',\n            label: '4'\n          }, {\n            value: '5',\n            label: '5'\n          }, {\n            value: '6',\n            label: '6'\n          }, {\n            value: '7',\n            label: '7'\n          }, {\n            value: '8',\n            label: '8'\n          }, {\n            value: '9',\n            label: '9'\n          }, {\n            value: '10',\n            label: '10'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, \"Start Date\"), React.createElement(Datepicker, {\n          name: \"dtStart\",\n          dateFormat: \"MM.dd.yyyy\",\n          placeholder: \"Start Date*\",\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }, \"Maximum people\"), React.createElement(Select, {\n          name: \"maxPeople\",\n          placeholder: \"Maximum people*\",\n          options: [{\n            value: '1',\n            label: '1'\n          }, {\n            value: '2',\n            label: '2'\n          }, {\n            value: '3',\n            label: '3'\n          }, {\n            value: '4',\n            label: '4'\n          }, {\n            value: '5',\n            label: '5'\n          }, {\n            value: '6',\n            label: '6'\n          }, {\n            value: '7',\n            label: '7'\n          }, {\n            value: '8',\n            label: '8'\n          }, {\n            value: '9',\n            label: '9'\n          }, {\n            value: '10',\n            label: '10'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, \"Price\"), React.createElement(\"div\", {\n          className: \"form__container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }, React.createElement(Input, {\n          name: \"price\",\n          type: \"number\",\n          placeholder: \"Price*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, \"Short description\"), React.createElement(Textarea, {\n          name: \"description\",\n          className: \"form__textarea\" // label=\"Short description\"\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }, \"Check all that is included in this price:\"), React.createElement(\"div\", {\n          className: \"form__checkbox-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        }, checkBoxesAmenities.map(cb => React.createElement(Checkbox, {\n          key: cb.name,\n          name: cb.name,\n          text: cb.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451\n          },\n          __self: this\n        }))), React.createElement(ItinerariesList, {\n          days: itineraryDays,\n          addDay: this.handleAddDayItinerary,\n          removeDay: this.handleRemoveDayItinerary,\n          count: itineraryDays.length > 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }), React.createElement(AccomodationsList, {\n          accomodations: accomodations,\n          addDay: this.handleAddDayAccomodation,\n          removeDay: this.handleRemoveDayAccomodation,\n          count: accomodations.length !== 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"form__title form__title--sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469\n          },\n          __self: this\n        }, \"Gallery:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        }, \"Check an image to use for your cover photo:\"), React.createElement(\"div\", {\n          className: \"form__fields-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        }, this.state.checkBoxesImages.map(cb => React.createElement(ImageSelect, {\n          key: cb.name,\n          imageName: cb.imageName,\n          imageSrcName: false,\n          checkBoxName: cb.name,\n          removePhoto: this.handleRemovePhoto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          style: {\n            marginBottom: '1em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.handleAddPhoto,\n          className: \"add-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        }, \"Add more photo\")), React.createElement(SubmitBtn, {\n          className: \"form__submit-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["E:\\work\\project4.0\\src\\components\\Trips\\AddTripForm.js"],"names":["React","Formik","yup","Form","Input","Datepicker","Select","Textarea","Checkbox","SubmitBtn","ImageSelect","ItinerariesList","AccomodationsList","AddTripForm","Component","constructor","props","handleAddDayItinerary","e","preventDefault","count","state","itineraryDays","length","setState","id","name","label","handleRemoveDayItinerary","slice","handleAddDayAccomodation","accomodations","dayStart","numberOfDays","description","handleRemoveDayAccomodation","handleAddPhoto","checkBoxesImages","imageName","value","handleRemovePhoto","filter","item","onSubmit","values","console","log","AddTripSubmit","checkBoxesAmenities","text","initialValues","title","country","destination","tourType","days","dtStart","maxPeople","price","currency","accomodationDays","accomodationDaysDesc","bind","uploadImg","pic","undefined","formData","FormData","append","response","fetch","method","headers","Authorization","token","body","json","uploadedProfileImg","profilePics","i","push","photoKey","isCoverPhoto","concat","map","itinerary","day","JSON","stringify","userId","gallery","then","ok","data","history","pathname","isLoggedIn","catch","err","componentDidMount","reduce","acc","render","getSchema","object","shape","string","required","forEach","keys","Object","includes","textAlign","width","display","cb","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Form,\n  Input,\n  Datepicker,\n  Select,\n  Textarea,\n  Checkbox,\n  SubmitBtn\n} from 'react-formik-ui';\n\nimport ImageSelect from './ImageSelect';\nimport ItinerariesList from './ItinerariesList';\nimport AccomodationsList from './AccomodationsList';\n\nexport class AddTripForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      itineraryDays: [\n        {\n          id: 1,\n          name: 'day1',\n          label: 'Day 1'\n        },\n        {\n          id: 2,\n          name: 'day2',\n          label: 'Day 2'\n        }\n      ],\n      accomodations: [\n        // {\n        //   id: 1,\n        //   numberOfDays: 'accomodationDays1',\n        //   description: 'accomodationDaysDesc'\n        // }\n      ],\n      checkBoxesAmenities: [\n        { name: 'allMealsIncluded', text: 'All meals', value: false },\n        { name: 'transfersIncluded', text: 'Transfers', value: false },\n        { name: 'alcoholIncluded', text: 'Alcoholic Beverages', value: false },\n        { name: 'flightsIncluded', text: 'Flights', value: false },\n        { name: 'gratuitiesIncluded', text: 'Gratitude', value: false }\n      ],\n\n      checkBoxesImages: [\n        { name: 'cbImg1', value: false, imageName: 'img1' },\n        { name: 'cbImg2', value: false, imageName: 'img2' },\n        { name: 'cbImg3', value: false, imageName: 'img3' },\n        { name: 'cbImg4', value: false, imageName: 'img4' }\n      ],\n      initialValues: {\n        title: '',\n        country: '',\n        destination: '',\n        tourType: '',\n        days: '',\n        description: '',\n        dtStart: '',\n        maxPeople: '',\n        price: '',\n        currency: '',\n        accomodationDays: 1,\n        accomodationDaysDesc: ''\n      }\n    };\n\n    this.AddTripSubmit = this.AddTripSubmit.bind(this);\n    this.uploadImg = this.uploadImg.bind(this);\n  }\n\n  handleAddDayItinerary = (e) => {\n    e.preventDefault();\n    const count = this.state.itineraryDays.length + 1;\n    this.setState({\n      itineraryDays: [\n        ...this.state.itineraryDays,\n        { id: count, name: `day${count}`, label: `Day ${count}` }\n      ]\n    });\n  };\n\n  handleRemoveDayItinerary = (e) => {\n    e.preventDefault();\n    this.setState({\n      itineraryDays: this.state.itineraryDays.slice(0, -1)\n    });\n  };\n\n  handleAddDayAccomodation = (e) => {\n    e.preventDefault();\n    const count = this.state.accomodations.length + 1;\n    this.setState({\n      accomodations: [\n        ...this.state.accomodations,\n        {\n          id: count,\n          dayStart: `accomodationDay${count}Start`,\n          numberOfDays: `accomodationDays${count}`,\n          description: `accomodationDays${count}Desc`\n        }\n      ]\n    });\n  };\n\n  handleRemoveDayAccomodation = (e) => {\n    e.preventDefault();\n    this.setState({\n      accomodations: this.state.accomodations.slice(0, -1)\n    });\n  };\n\n  handleAddPhoto = (e) => {\n    e.preventDefault();\n    const count = this.state.checkBoxesImages.length + 1;\n    const name = `cbImg${count}`;\n    const imageName = `img${count}`;\n    this.setState({\n      checkBoxesImages: [\n        ...this.state.checkBoxesImages,\n        { name, value: false, imageName }\n      ]\n    });\n  };\n\n  handleRemovePhoto = (e, imageName) => {\n    e.preventDefault();\n    this.setState({\n      checkBoxesImages: this.state.checkBoxesImages.filter(\n        (item) => item.imageName !== imageName\n      )\n    });\n  };\n\n  async uploadImg(pic) {\n    if (pic === undefined) {\n      return { name: '' };\n    }\n    const formData = new FormData();\n    formData.append('file', pic);\n    const response = await fetch('https://fototripr.com/api/v1/Images/0', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: formData\n    });\n\n    return await response.json();\n  }\n\n  onSubmit = (values) => {\n    console.log(\"onSubmit\");\n    this.AddTripSubmit(values);\n  };\n  async AddTripSubmit(values) {\n    console.log(\"nadd a new trip\");\n    let uploadedProfileImg = '';\n    let profilePics = [];\n\n    const { checkBoxesImages } = this.state;\n\n    for (let i = 0; i < checkBoxesImages.length; i++) {\n      if (values[checkBoxesImages[i].imageName].length !== 0) {\n        uploadedProfileImg = await this.uploadImg(\n          values[checkBoxesImages[i].imageName][0]\n        );\n        profilePics.push({\n          photoKey: uploadedProfileImg.name,\n          isCoverPhoto: values[checkBoxesImages[i].name]\n        });\n      }\n    }\n\n    const accomodations = [\n      {\n        dayStart: 1,\n        numberOfDays: values.accomodationDays,\n        description: values.accomodationDaysDesc\n      }\n    ].concat(\n      this.state.accomodations.map((item) => ({\n        dayStart: values[item.dayStart],\n        numberOfDays: values[item.numberOfDays],\n        description: values[item.description]\n      }))\n    );\n\n    const itinerary = this.state.itineraryDays.map((item) => ({\n      day: item.id,\n      description: values[item.name]\n    }));\n\n    return fetch('http://www.silvanium.com/api/v1/Trips/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: JSON.stringify({\n        id: this.props.userId,\n        userId: this.props.userId,\n        ...values,\n        itinerary,\n        accomodations,\n        gallery: profilePics\n      })\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            this.props.history.push({\n              pathname: '/all-trips',\n              state: {\n                userId: this.props.userId,\n                token: this.props.token,\n                isLoggedIn: this.props.isLoggedIn\n              }\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    this.setState({\n      ...this.state.initialValues,\n      ...this.state.checkBoxesImages.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: value\n        }),\n        {}\n      ),\n      ...this.state.checkBoxesAmenities.reduce(\n        (acc, { name, value }) => ({\n          ...acc,\n          [name]: value\n        }),\n        {}\n      )\n    });\n  }\n\n  render() {\n    const getSchema = () => {\n      return yup.object().shape({\n        title: yup.string().required('Tour title is required'),\n        country: yup.string().required('Tour country is required'),\n        destination: yup.string().required('Tour city is required'),\n        tourType: yup.string().required('Tour type is required'),\n        days: yup.string().required('Number of Days is required'),\n        dtStart: yup.string().required('Start date is required'),\n        maxPeople: yup.string().required('Maximum people is required'),\n        price: yup.string().required('Price is required'),\n        currency: yup.string().required('Currency is required')\n      });\n    };\n\n    const {\n      itineraryDays,\n      accomodations,\n      checkBoxesImages,\n      initialValues,\n      checkBoxesAmenities\n    } = this.state;\n\n    itineraryDays.forEach((item) => {\n      initialValues[item.name] = '';\n      // initialValues[item.style] = { float: \"left\", textAlign:\"left\", width:\"100%\", display:\"block\"}\n    });\n\n    accomodations.forEach((item) => {\n      initialValues[item.dayStart] = 1;\n      initialValues[item.numberOfDays] = 1;\n      initialValues[item.description] = '';\n    });\n\n    const keys = Object.keys(initialValues);\n    checkBoxesImages.forEach((item) => {\n      if (!keys.includes(item.imageName)) {\n        initialValues[item.imageName] = [];\n      }\n    });\n\n    return (\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={getSchema}\n        onSubmit= {() =>{console.log(\"submit\");}}// {this.onSubmit}\n        render={() => {\n          return (\n            <Form mode=\"structured\" className=\"form\">\n              <fieldset>\n                <h1>Add a new tour</h1>\n                <div className=\"form__title form__title--sm\">General Info</div>\n                <div className=\"form__container\">\n                  <div className=\"col\">\n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Tour Title</label>\n                      <Input\n                        name=\"title\"\n                        placeholder=\"Tour Title*\"\n                        required\n                        className=\"form__input\"\n                      />\n                    </div>\n                    \n                    <div >\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Select Country</label>\n                      <Select\n                        name=\"country\"\n                        placeholder=\"Select a Country*\"\n                        options={[\n                          { value: 'India', label: 'India' },\n                          { value: 'Iceland', label: 'Iceland' },\n                          { value: 'Argentina', label: 'Argentina' },\n                          { value: 'Phuket', label: 'Phuket' }\n                        ]}\n                        className=\"form__select\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Select a City</label>\n                      <Select\n                        name=\"destination\"\n                        placeholder=\"Select a City*\"\n                        options={[\n                          { value: 'Rajasthan', label: 'Rajasthan' },\n                          { value: 'Reykjavik', label: 'Reykjavik' },\n                          { value: 'Beunoes Aires', label: 'Beunoes Aires' },\n                          { value: 'Thailand', label: 'Thailand' }\n                        ]}\n                        className=\"form__select\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Tour Type</label>\n                      <Select\n                        name=\"tourType\"\n                        placeholder=\"Tour type*\"\n                        options={[\n                          { value: 'Easy', label: 'Easy' },\n                          { value: 'Moderate', label: 'Moderate' },\n                          { value: 'Strenuous', label: 'Strenuous' }\n                        ]}\n                        className=\"form__select\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Number of days</label>\n                      <Select\n                        name=\"days\"\n                        placeholder=\"Number of days*\"\n                        options={[\n                          { value: '1', label: '1' },\n                          { value: '2', label: '2' },\n                          { value: '3', label: '3' },\n                          { value: '4', label: '4' },\n                          { value: '5', label: '5' },\n                          { value: '6', label: '6' },\n                          { value: '7', label: '7' },\n                          { value: '8', label: '8' },\n                          { value: '9', label: '9' },\n                          { value: '10', label: '10' }\n                        ]}\n                        className=\"form__select\"\n                      />\n                    </div>\n\n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Start Date</label>\n                      <Datepicker\n                        name=\"dtStart\"\n                        dateFormat=\"MM.dd.yyyy\"\n                        placeholder=\"Start Date*\"\n                        className=\"form__input\"\n                      />\n                    </div>\n\n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Maximum people</label>\n                      <Select\n                        name=\"maxPeople\"\n                        placeholder=\"Maximum people*\"\n                        options={[\n                          { value: '1', label: '1' },\n                          { value: '2', label: '2' },\n                          { value: '3', label: '3' },\n                          { value: '4', label: '4' },\n                          { value: '5', label: '5' },\n                          { value: '6', label: '6' },\n                          { value: '7', label: '7' },\n                          { value: '8', label: '8' },\n                          { value: '9', label: '9' },\n                          { value: '10', label: '10' }\n                        ]}\n                        className=\"form__select\"\n                      />\n                    </div>\n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Price</label>\n                      <div className=\"form__container\">\n                        \n                        <Input\n                          name=\"price\"  \n                          type=\"number\"\n                          placeholder=\"Price*\"\n                          required\n                          className=\"form__input\"\n                        />\n\n                        {/* <Select\n                          name=\"currency\"\n                          placeholder=\"Currency*\"\n                          options={[\n                            { value: 'USD', label: 'USD' },\n                            { value: 'EUR', label: 'EUR' },\n                            { value: 'GBP', label: 'GBP' }\n                          ]}\n                          className=\"form__select\"\n                        /> */}\n                      </div>\n                    </div>\n                    \n                  </div>\n                  <div className=\"col\">\n                  <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Short description</label>\n                    <Textarea\n                      name=\"description\"\n                      className=\"form__textarea\"\n                      // label=\"Short description\"\n                    />\n                  </div>\n                </div>\n\n                <p>Check all that is included in this price:</p>\n                <div className=\"form__checkbox-container\">\n                  {checkBoxesAmenities.map((cb) => (\n                    <Checkbox key={cb.name} name={cb.name} text={cb.text} />\n                  ))}\n                </div>\n\n                <ItinerariesList\n                  days={itineraryDays}\n                  addDay={this.handleAddDayItinerary}\n                  removeDay={this.handleRemoveDayItinerary}\n                  count={itineraryDays.length > 1}\n                />\n\n                <AccomodationsList\n                  accomodations={accomodations}\n                  addDay={this.handleAddDayAccomodation}\n                  removeDay={this.handleRemoveDayAccomodation}\n                  count={accomodations.length !== 0}\n                />\n\n                <div className=\"form__title form__title--sm\">Gallery:</div>\n\n                <p>Check an image to use for your cover photo:</p>\n                <div className=\"form__fields-wrapper\">\n                  {this.state.checkBoxesImages.map((cb) => (\n                    <ImageSelect\n                      key={cb.name}\n                      imageName={cb.imageName}\n                      imageSrcName={false}\n                      checkBoxName={cb.name}\n                      removePhoto={this.handleRemovePhoto}\n                    />\n                  ))}\n                </div>\n\n                <div style={{ marginBottom: '1em' }}>\n                  <button onClick={this.handleAddPhoto} className=\"add-btn\">\n                    Add more photo\n                  </button>\n                </div>\n                <SubmitBtn className=\"form__submit-btn\" />\n              </fieldset>\n            </Form>\n          );\n        }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}