{"ast":null,"code":"import _objectSpread2 from \"E:\\\\work\\\\project4.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"E:\\\\work\\\\project4.0\\\\src\\\\components\\\\Trips\\\\UpdateTripForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, Datepicker, Select, Textarea, Checkbox, SubmitBtn } from 'react-formik-ui';\nimport ImageSelect from './ImageSelect';\nimport ItinerariesList from './ItinerariesList';\nimport AccomodationsList from './AccomodationsList';\nexport class UpdateTripForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddDayItinerary = e => {\n      e.preventDefault();\n      const count = this.state.itineraryDays.length + 1;\n      this.setState({\n        itineraryDays: [...this.state.itineraryDays, {\n          id: count,\n          name: \"day\".concat(count),\n          label: \"Day \".concat(count)\n        }]\n      });\n    };\n\n    this.handleRemoveDayItinerary = e => {\n      e.preventDefault();\n      this.setState({\n        itineraryDays: this.state.itineraryDays.slice(0, -1)\n      });\n    };\n\n    this.handleAddDayAccomodation = e => {\n      e.preventDefault();\n      const count = this.state.accomodations.length + 1;\n      this.setState({\n        accomodations: [...this.state.accomodations, {\n          id: count,\n          dayStart: \"accomodationDay\".concat(count, \"Start\"),\n          numberOfDays: \"accomodationDays\".concat(count),\n          description: \"accomodationDays\".concat(count, \"Desc\")\n        }]\n      });\n    };\n\n    this.handleRemoveDayAccomodation = e => {\n      e.preventDefault();\n      this.setState({\n        accomodations: this.state.accomodations.slice(0, -1)\n      });\n    };\n\n    this.handleAddPhoto = e => {\n      e.preventDefault();\n      const count = this.state.checkBoxesImages.length + 1;\n      const name = \"cbImg\".concat(count);\n      const imageName = \"img\".concat(count);\n      this.setState({\n        checkBoxesImages: this.state.checkBoxesImages.concat([{\n          name,\n          value: false,\n          imageName\n        }])\n      });\n    };\n\n    this.handleRemovePhoto = (e, imageName) => {\n      e.preventDefault();\n      this.setState({\n        checkBoxesImages: this.state.checkBoxesImages.filter(item => item.imageName !== imageName)\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      initialValues: {},\n      itineraryDays: [],\n      accomodations: [],\n      checkBoxesImages: []\n    };\n    this.UpdateTripSubmit = this.UpdateTripSubmit.bind(this);\n    this.uploadImg = this.uploadImg.bind(this);\n  }\n\n  async uploadImg(pic) {\n    if (pic === undefined) {\n      return {\n        name: ''\n      };\n    }\n\n    const formData = new FormData();\n    formData.append('file', pic);\n    const response = await fetch('https://fototripr.com/api/v1/Images/0', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: formData\n    });\n    return await response.json();\n  }\n\n  async UpdateTripSubmit(values) {\n    // console.log(values);\n    let uploadedProfileImg = '';\n    let profilePics = [];\n    const checkBoxesImages = this.state.checkBoxesImages;\n\n    for (let i = 0; i < checkBoxesImages.length; i++) {\n      if (values[checkBoxesImages[i].imageName].length !== 0) {\n        uploadedProfileImg = await this.uploadImg(values[checkBoxesImages[i].imageName][0]);\n        profilePics.push({\n          photoKey: uploadedProfileImg.name,\n          isCoverPhoto: values[checkBoxesImages[i].name]\n        });\n      } else if (values[checkBoxesImages[i].imageName].length === 0) {\n        profilePics.push({\n          photoKey: checkBoxesImages[i].imageSrcName,\n          isCoverPhoto: values[checkBoxesImages[i].name]\n        });\n      }\n    }\n\n    const accomodations = [{\n      dayStart: 1,\n      numberOfDays: values.accomodationDays,\n      description: values.accomodationDaysDesc\n    }].concat(this.state.accomodations.map(item => ({\n      dayStart: values[item.dayStart],\n      numberOfDays: values[item.numberOfDays],\n      description: values[item.description]\n    })));\n    const itinerary = this.state.itineraryDays.map(item => ({\n      day: item.id,\n      description: values[item.name]\n    }));\n    return fetch('https://www.fototripr.com/api/v1/Trips/' + this.props.trip.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: JSON.stringify(_objectSpread2({\n        id: this.props.trip.id,\n        userId: this.props.trip.userId\n      }, values, {\n        itinerary,\n        accomodations,\n        gallery: profilePics\n      }))\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          // console.log(data);\n          this.props.history.push({\n            pathname: '/all-trips',\n            state: {\n              userId: this.props.trip.userId,\n              token: this.props.token,\n              isLoggedIn: this.props.isLoggedIn\n            }\n          });\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    const init = _objectSpread2({}, this.props.trip);\n\n    const initialValues = {\n      title: init.title ? init.title : '',\n      country: init.country ? init.country : '',\n      destination: init.destination ? init.destination : '',\n      tourType: init.tourType ? init.tourType : '',\n      days: init.days ? init.days : '',\n      description: init.description ? init.description : '',\n      dtStart: init.dtStart ? init.dtStart : '',\n      maxPeople: init.maxPeople ? init.maxPeople : '',\n      price: init.price ? init.price : '',\n      currency: init.currency ? init.currency : '',\n      alcoholIncluded: init.alcoholIncluded ? init.alcoholIncluded : false,\n      allMealsIncluded: init.allMealsIncluded ? init.allMealsIncluded : false,\n      transfersIncluded: init.transfersIncluded ? init.transfersIncluded : false,\n      flightsIncluded: init.flightsIncluded ? init.flightsIncluded : false,\n      gratuitiesIncluded: init.gratuitiesIncluded ? init.gratuitiesIncluded : false,\n      accomodationDays: init.accomodations && init.accomodations[0] ? init.accomodations[0].numberOfDays : 1,\n      accomodationDaysDesc: init.accomodations && init.accomodations[0] ? init.accomodations[0].description : ''\n    };\n    const itineraries = init.itinerary.map(item => ({\n      id: item.day,\n      name: \"day\".concat(item.day),\n      label: \"Day \".concat(item.day)\n    }));\n    const accomodations = init.accomodations.slice(1).map((item, index) => ({\n      id: index + 1,\n      dayStart: \"accomodationDay\".concat(index + 1, \"Start\"),\n      numberOfDays: \"accomodationDays\".concat(index + 1),\n      description: \"accomodationDays\".concat(index + 1, \"Desc\")\n    })); // let accomodationsDaysCount = 1;\n    // if (accomodations.length > 1) {\n    //   for (let i = 0; i < accomodations.length - 1; i++) {\n    //     accomodationsDaysCount += 1;\n    //   }\n    // }\n\n    itineraries.forEach(item => {\n      initialValues[item.name] = init.itinerary[item.id - 1] ? init.itinerary[item.id - 1].description : '';\n    });\n\n    for (let i = 0; i < accomodations.length; i++) {\n      initialValues[accomodations[i]['dayStart']] = init.accomodations[i + 1] ? init.accomodations[i + 1].dayStart : '';\n      initialValues[accomodations[i]['numberOfDays']] = init.accomodations[i + 1] ? init.accomodations[i + 1].numberOfDays : '';\n      initialValues[accomodations[i]['description']] = init.accomodations[i + 1] ? init.accomodations[i + 1].description : '';\n    }\n\n    const checkBoxesImages = [];\n    const checkBoxesImagesCount = this.props.trip.gallery.length;\n\n    for (let i = 1; i <= checkBoxesImagesCount; i++) {\n      checkBoxesImages.push({\n        name: \"cbImg\".concat(i),\n        value: this.props.trip.gallery[i - 1].isCoverPhoto,\n        imageName: \"img\".concat(i),\n        imageSrcName: this.props.trip.gallery[i - 1].photoKey\n      });\n      initialValues[checkBoxesImages[i - 1].name] = checkBoxesImages[i - 1].value;\n      initialValues[checkBoxesImages[i - 1].imageName] = [];\n    }\n\n    this.setState({\n      initialValues: _objectSpread2({}, initialValues),\n      itineraryDays: [...itineraries],\n      accomodations: [...accomodations],\n      checkBoxesImages: [...checkBoxesImages]\n    });\n  }\n\n  render() {\n    const getSchema = () => {\n      return yup.object().shape({\n        title: yup.string().required('Tour title is required'),\n        country: yup.string().required('Tour country is required'),\n        destination: yup.string().required('Tour city is required'),\n        tourType: yup.string().required('Tour type is required'),\n        days: yup.string().required('Number of Days is required'),\n        dtStart: yup.string().required('Start date is required'),\n        maxPeople: yup.string().required('Maximum people is required'),\n        price: yup.string().required('Price is required'),\n        currency: yup.string().required('Currency is required')\n      });\n    };\n\n    const checkBoxesAmenities = [{\n      name: 'allMealsIncluded',\n      text: 'All meals',\n      value: false\n    }, {\n      name: 'transfersIncluded',\n      text: 'Transfers',\n      value: false\n    }, {\n      name: 'alcoholIncluded',\n      text: 'Alcoholic Beverages',\n      value: false\n    }, {\n      name: 'flightsIncluded',\n      text: 'Flights',\n      value: false\n    }, {\n      name: 'gratuitiesIncluded',\n      text: 'Gratitude',\n      value: false\n    }]; // const checkBoxesImages = [\n    //   { name: 'cbImg1', value: false, imageName: 'img1' },\n    //   { name: 'cbImg2', value: false, imageName: 'img2' },\n    //   { name: 'cbImg3', value: false, imageName: 'img3' },\n    //   { name: 'cbImg4', value: false, imageName: 'img3' }\n    // ];\n    // const initialValues = {\n    //   title: init.title ? init.title : '',\n    //   country: init.country ? init.country : '',\n    //   destination: init.destination ? init.destination : '',\n    //   tourType: init.tourType ? init.tourType : '',\n    //   days: init.days ? init.days : '',\n    //   description: init.description ? init.description : '',\n    //   dtStart: init.dtStart ? init.dtStart : '',\n    //   maxPeople: init.maxPeople ? init.maxPeople : '',\n    //   price: init.price ? init.price : '',\n    //   currency: init.currency ? init.currency : '',\n    //   alcoholIncluded: init.alcoholIncluded ? init.alcoholIncluded : false,\n    //   allMealsIncluded: init.allMealsIncluded ? init.allMealsIncluded : false,\n    //   transfersIncluded: init.transfersIncluded\n    //     ? init.transfersIncluded\n    //     : false,\n    //   flightsIncluded: init.flightsIncluded ? init.flightsIncluded : false,\n    //   gratuitiesIncluded: init.gratuitiesIncluded\n    //     ? init.gratuitiesIncluded\n    //     : false,\n    //   ...this.state.checkBoxesImages.reduce(\n    //     (acc, { name, value }) => ({\n    //       ...acc,\n    //       [name]: value\n    //     }),\n    //     {}\n    //   ),\n    //   ...this.state.checkBoxesImages.reduce(\n    //     (acc, { imageName }) => ({\n    //       ...acc,\n    //       [imageName]: []\n    //     }),\n    //     {}\n    //   )\n    // };\n\n    const _this$state = this.state,\n          itineraryDays = _this$state.itineraryDays,\n          accomodations = _this$state.accomodations,\n          initialValues = _this$state.initialValues,\n          checkBoxesImages = _this$state.checkBoxesImages;\n    const keys = Object.keys(initialValues);\n    checkBoxesImages.forEach(item => {\n      if (!keys.includes(item.imageName)) {\n        initialValues[item.imageName] = [];\n      }\n    });\n    return React.createElement(Formik, {\n      enableReinitialize: true,\n      initialValues: initialValues,\n      validationSchema: getSchema,\n      onSubmit: this.UpdateTripSubmit,\n      render: () => {\n        return React.createElement(Form, {\n          mode: \"structured\",\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, React.createElement(\"fieldset\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }, \"Update an active tour\"), React.createElement(\"div\", {\n          className: \"form__title form__title--sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }, \"General Info\"), React.createElement(\"div\", {\n          className: \"form__container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, \"Tour Title\"), React.createElement(Input, {\n          name: \"title\",\n          placeholder: \"Tour Title*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"Select a Country\"), React.createElement(Select, {\n          name: \"country\",\n          placeholder: \"Select a Country*\",\n          options: [{\n            value: 'India',\n            label: 'India'\n          }, {\n            value: 'Iceland',\n            label: 'Iceland'\n          }, {\n            value: 'Argentina',\n            label: 'Argentina'\n          }, {\n            value: 'Phuket',\n            label: 'Phuket'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        })), React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }, \"Select a Destination\"), React.createElement(Select, {\n          name: \"destination\",\n          placeholder: \"Select a Destination*\",\n          options: [{\n            value: 'Rajasthan',\n            label: 'Rajasthan'\n          }, {\n            value: 'Reykjavik',\n            label: 'Reykjavik'\n          }, {\n            value: 'Beunoes Aires',\n            label: 'Beunoes Aires'\n          }, {\n            value: 'Thailand',\n            label: 'Thailand'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, \"Tour type\"), React.createElement(Select, {\n          name: \"tourType\",\n          placeholder: \"Tour type*\",\n          options: [{\n            value: 'Easy',\n            label: 'Easy'\n          }, {\n            value: 'Moderate',\n            label: 'Moderate'\n          }, {\n            value: 'Strenuous',\n            label: 'Strenuous'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, \"Number of days\"), React.createElement(Select, {\n          name: \"days\",\n          placeholder: \"Number of days*\",\n          options: [{\n            value: '1',\n            label: '1'\n          }, {\n            value: '2',\n            label: '2'\n          }, {\n            value: '3',\n            label: '3'\n          }, {\n            value: '4',\n            label: '4'\n          }, {\n            value: '5',\n            label: '5'\n          }, {\n            value: '6',\n            label: '6'\n          }, {\n            value: '7',\n            label: '7'\n          }, {\n            value: '8',\n            label: '8'\n          }, {\n            value: '9',\n            label: '9'\n          }, {\n            value: '10',\n            label: '10'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        }, \"Start Date\"), React.createElement(Datepicker, {\n          name: \"dtStart\",\n          dateFormat: \"MM.dd.yyyy\",\n          placeholder: \"Start Date*\",\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, \"Maximum people\"), React.createElement(Select, {\n          name: \"maxPeople\",\n          placeholder: \"Maximum people*\",\n          options: [//TODO: Make this dynamic\n          {\n            value: '1',\n            label: '1'\n          }, {\n            value: '2',\n            label: '2'\n          }, {\n            value: '3',\n            label: '3'\n          }, {\n            value: '4',\n            label: '4'\n          }, {\n            value: '5',\n            label: '5'\n          }, {\n            value: '6',\n            label: '6'\n          }, {\n            value: '7',\n            label: '7'\n          }, {\n            value: '8',\n            label: '8'\n          }, {\n            value: '9',\n            label: '9'\n          }, {\n            value: '10',\n            label: '10'\n          }],\n          className: \"form__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"form__container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, \"Price\"), React.createElement(Input, {\n          name: \"price\",\n          type: \"number\",\n          placeholder: \"Price*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            textAlign: \"left\",\n            width: \"100%\",\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502\n          },\n          __self: this\n        }, \"Short description\"), React.createElement(Textarea, {\n          name: \"description\",\n          className: \"form__textarea\" // label=\"Short description\"\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        }, \"Check all that is included in this price:\"), React.createElement(\"div\", {\n          className: \"form__checkbox-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 512\n          },\n          __self: this\n        }, checkBoxesAmenities.map(cb => React.createElement(Checkbox, {\n          key: cb.name,\n          name: cb.name,\n          text: cb.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }))), React.createElement(ItinerariesList, {\n          days: itineraryDays,\n          addDay: this.handleAddDayItinerary,\n          removeDay: this.handleRemoveDayItinerary,\n          count: itineraryDays.length > 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518\n          },\n          __self: this\n        }), React.createElement(AccomodationsList, {\n          accomodations: accomodations,\n          addDay: this.handleAddDayAccomodation,\n          removeDay: this.handleRemoveDayAccomodation,\n          count: accomodations.length !== 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"form__title form__title--sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532\n          },\n          __self: this\n        }, \"Gallery:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534\n          },\n          __self: this\n        }, \"Check an image to use for your cover photo:\"), React.createElement(\"div\", {\n          className: \"form__fields-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538\n          },\n          __self: this\n        }, this.state.checkBoxesImages.map(cb => React.createElement(ImageSelect, {\n          key: cb.name,\n          imageName: cb.imageName,\n          imageSrcName: cb.imageSrcName,\n          checkBoxName: cb.name,\n          removePhoto: this.handleRemovePhoto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          style: {\n            marginBottom: '1em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.handleAddPhoto,\n          className: \"add-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550\n          },\n          __self: this\n        }, \"Add more photo\")), React.createElement(SubmitBtn, {\n          className: \"form__submit-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["E:\\work\\project4.0\\src\\components\\Trips\\UpdateTripForm.js"],"names":["React","Formik","yup","Form","Input","Datepicker","Select","Textarea","Checkbox","SubmitBtn","ImageSelect","ItinerariesList","AccomodationsList","UpdateTripForm","Component","constructor","props","handleAddDayItinerary","e","preventDefault","count","state","itineraryDays","length","setState","id","name","label","handleRemoveDayItinerary","slice","handleAddDayAccomodation","accomodations","dayStart","numberOfDays","description","handleRemoveDayAccomodation","handleAddPhoto","checkBoxesImages","imageName","concat","value","handleRemovePhoto","filter","item","error","isLoaded","initialValues","UpdateTripSubmit","bind","uploadImg","pic","undefined","formData","FormData","append","response","fetch","method","headers","Authorization","token","body","json","values","uploadedProfileImg","profilePics","i","push","photoKey","isCoverPhoto","imageSrcName","accomodationDays","accomodationDaysDesc","map","itinerary","day","trip","JSON","stringify","userId","gallery","then","ok","data","history","pathname","isLoggedIn","catch","err","console","log","componentDidMount","init","title","country","destination","tourType","days","dtStart","maxPeople","price","currency","alcoholIncluded","allMealsIncluded","transfersIncluded","flightsIncluded","gratuitiesIncluded","itineraries","index","forEach","checkBoxesImagesCount","render","getSchema","object","shape","string","required","checkBoxesAmenities","text","keys","Object","includes","textAlign","width","display","cb","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Form,\n  Input,\n  Datepicker,\n  Select,\n  Textarea,\n  Checkbox,\n  SubmitBtn\n} from 'react-formik-ui';\n\nimport ImageSelect from './ImageSelect';\nimport ItinerariesList from './ItinerariesList';\nimport AccomodationsList from './AccomodationsList';\n\nexport class UpdateTripForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      initialValues: {},\n      itineraryDays: [],\n      accomodations: [],\n      checkBoxesImages: []\n    };\n\n    this.UpdateTripSubmit = this.UpdateTripSubmit.bind(this);\n    this.uploadImg = this.uploadImg.bind(this);\n  }\n\n  handleAddDayItinerary = (e) => {\n    e.preventDefault();\n    const count = this.state.itineraryDays.length + 1;\n    this.setState({\n      itineraryDays: [\n        ...this.state.itineraryDays,\n        { id: count, name: `day${count}`, label: `Day ${count}` }\n      ]\n    });\n  };\n\n  handleRemoveDayItinerary = (e) => {\n    e.preventDefault();\n    this.setState({\n      itineraryDays: this.state.itineraryDays.slice(0, -1)\n    });\n  };\n\n  handleAddDayAccomodation = (e) => {\n    e.preventDefault();\n    const count = this.state.accomodations.length + 1;\n    this.setState({\n      accomodations: [\n        ...this.state.accomodations,\n        {\n          id: count,\n          dayStart: `accomodationDay${count}Start`,\n          numberOfDays: `accomodationDays${count}`,\n          description: `accomodationDays${count}Desc`\n        }\n      ]\n    });\n  };\n\n  handleRemoveDayAccomodation = (e) => {\n    e.preventDefault();\n    this.setState({\n      accomodations: this.state.accomodations.slice(0, -1)\n    });\n  };\n\n  handleAddPhoto = (e) => {\n    e.preventDefault();\n    const count = this.state.checkBoxesImages.length + 1;\n    const name = `cbImg${count}`;\n    const imageName = `img${count}`;\n    this.setState({\n      checkBoxesImages: this.state.checkBoxesImages.concat([\n        { name, value: false, imageName }\n      ])\n    });\n  };\n\n  handleRemovePhoto = (e, imageName) => {\n    e.preventDefault();\n    this.setState({\n      checkBoxesImages: this.state.checkBoxesImages.filter(\n        (item) => item.imageName !== imageName\n      )\n    });\n  };\n\n  async uploadImg(pic) {\n    if (pic === undefined) {\n      return { name: '' };\n    }\n    const formData = new FormData();\n    formData.append('file', pic);\n    const response = await fetch('https://fototripr.com/api/v1/Images/0', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: formData\n    });\n\n    return await response.json();\n  }\n\n  async UpdateTripSubmit(values) {\n    // console.log(values);\n    let uploadedProfileImg = '';\n    let profilePics = [];\n\n    const { checkBoxesImages } = this.state;\n\n    for (let i = 0; i < checkBoxesImages.length; i++) {\n      if (values[checkBoxesImages[i].imageName].length !== 0) {\n        uploadedProfileImg = await this.uploadImg(\n          values[checkBoxesImages[i].imageName][0]\n        );\n        profilePics.push({\n          photoKey: uploadedProfileImg.name,\n          isCoverPhoto: values[checkBoxesImages[i].name]\n        });\n      } else if (values[checkBoxesImages[i].imageName].length === 0) {\n        profilePics.push({\n          photoKey: checkBoxesImages[i].imageSrcName,\n          isCoverPhoto: values[checkBoxesImages[i].name]\n        });\n      }\n    }\n\n    const accomodations = [\n      {\n        dayStart: 1,\n        numberOfDays: values.accomodationDays,\n        description: values.accomodationDaysDesc\n      }\n    ].concat(\n      this.state.accomodations.map((item) => ({\n        dayStart: values[item.dayStart],\n        numberOfDays: values[item.numberOfDays],\n        description: values[item.description]\n      }))\n    );\n\n    const itinerary = this.state.itineraryDays.map((item) => ({\n      day: item.id,\n      description: values[item.name]\n    }));\n\n    return fetch(\n      'https://www.fototripr.com/api/v1/Trips/' + this.props.trip.id,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.props.token\n        },\n        body: JSON.stringify({\n          id: this.props.trip.id,\n          userId: this.props.trip.userId,\n          ...values,\n          itinerary,\n          accomodations,\n          gallery: profilePics\n        })\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            // console.log(data);\n            this.props.history.push({\n              pathname: '/all-trips',\n              state: {\n                userId: this.props.trip.userId,\n                token: this.props.token,\n                isLoggedIn: this.props.isLoggedIn\n              }\n            });\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  componentDidMount() {\n    const init = { ...this.props.trip };\n\n    const initialValues = {\n      title: init.title ? init.title : '',\n      country: init.country ? init.country : '',\n      destination: init.destination ? init.destination : '',\n      tourType: init.tourType ? init.tourType : '',\n      days: init.days ? init.days : '',\n      description: init.description ? init.description : '',\n      dtStart: init.dtStart ? init.dtStart : '',\n      maxPeople: init.maxPeople ? init.maxPeople : '',\n      price: init.price ? init.price : '',\n      currency: init.currency ? init.currency : '',\n      alcoholIncluded: init.alcoholIncluded ? init.alcoholIncluded : false,\n      allMealsIncluded: init.allMealsIncluded ? init.allMealsIncluded : false,\n      transfersIncluded: init.transfersIncluded\n        ? init.transfersIncluded\n        : false,\n      flightsIncluded: init.flightsIncluded ? init.flightsIncluded : false,\n      gratuitiesIncluded: init.gratuitiesIncluded\n        ? init.gratuitiesIncluded\n        : false,\n      accomodationDays:\n        init.accomodations && init.accomodations[0]\n          ? init.accomodations[0].numberOfDays\n          : 1,\n      accomodationDaysDesc:\n        init.accomodations && init.accomodations[0]\n          ? init.accomodations[0].description\n          : ''\n    };\n\n    const itineraries = init.itinerary.map((item) => ({\n      id: item.day,\n      name: `day${item.day}`,\n      label: `Day ${item.day}`\n    }));\n\n    const accomodations = init.accomodations.slice(1).map((item, index) => ({\n      id: index + 1,\n      dayStart: `accomodationDay${index + 1}Start`,\n      numberOfDays: `accomodationDays${index + 1}`,\n      description: `accomodationDays${index + 1}Desc`\n    }));\n\n    // let accomodationsDaysCount = 1;\n    // if (accomodations.length > 1) {\n    //   for (let i = 0; i < accomodations.length - 1; i++) {\n    //     accomodationsDaysCount += 1;\n    //   }\n    // }\n\n    itineraries.forEach((item) => {\n      initialValues[item.name] = init.itinerary[item.id - 1]\n        ? init.itinerary[item.id - 1].description\n        : '';\n    });\n\n    for (let i = 0; i < accomodations.length; i++) {\n      initialValues[accomodations[i]['dayStart']] = init.accomodations[i + 1]\n        ? init.accomodations[i + 1].dayStart\n        : '';\n      initialValues[accomodations[i]['numberOfDays']] = init.accomodations[\n        i + 1\n      ]\n        ? init.accomodations[i + 1].numberOfDays\n        : '';\n      initialValues[accomodations[i]['description']] = init.accomodations[i + 1]\n        ? init.accomodations[i + 1].description\n        : '';\n    }\n    const checkBoxesImages = [];\n    const checkBoxesImagesCount = this.props.trip.gallery.length;\n    for (let i = 1; i <= checkBoxesImagesCount; i++) {\n      checkBoxesImages.push({\n        name: `cbImg${i}`,\n        value: this.props.trip.gallery[i - 1].isCoverPhoto,\n        imageName: `img${i}`,\n        imageSrcName: this.props.trip.gallery[i - 1].photoKey\n      });\n      initialValues[checkBoxesImages[i - 1].name] =\n        checkBoxesImages[i - 1].value;\n      initialValues[checkBoxesImages[i - 1].imageName] = [];\n    }\n    this.setState({\n      initialValues: { ...initialValues },\n      itineraryDays: [...itineraries],\n      accomodations: [...accomodations],\n      checkBoxesImages: [...checkBoxesImages]\n    });\n  }\n\n  render() {\n    const getSchema = () => {\n      return yup.object().shape({\n        title: yup.string().required('Tour title is required'),\n        country: yup.string().required('Tour country is required'),\n        destination: yup.string().required('Tour city is required'),\n        tourType: yup.string().required('Tour type is required'),\n        days: yup.string().required('Number of Days is required'),\n        dtStart: yup.string().required('Start date is required'),\n        maxPeople: yup.string().required('Maximum people is required'),\n        price: yup.string().required('Price is required'),\n        currency: yup.string().required('Currency is required')\n      });\n    };\n\n    const checkBoxesAmenities = [\n      { name: 'allMealsIncluded', text: 'All meals', value: false },\n      { name: 'transfersIncluded', text: 'Transfers', value: false },\n      { name: 'alcoholIncluded', text: 'Alcoholic Beverages', value: false },\n      { name: 'flightsIncluded', text: 'Flights', value: false },\n      { name: 'gratuitiesIncluded', text: 'Gratitude', value: false }\n    ];\n\n    // const checkBoxesImages = [\n    //   { name: 'cbImg1', value: false, imageName: 'img1' },\n    //   { name: 'cbImg2', value: false, imageName: 'img2' },\n    //   { name: 'cbImg3', value: false, imageName: 'img3' },\n    //   { name: 'cbImg4', value: false, imageName: 'img3' }\n    // ];\n\n    // const initialValues = {\n    //   title: init.title ? init.title : '',\n    //   country: init.country ? init.country : '',\n    //   destination: init.destination ? init.destination : '',\n    //   tourType: init.tourType ? init.tourType : '',\n    //   days: init.days ? init.days : '',\n    //   description: init.description ? init.description : '',\n    //   dtStart: init.dtStart ? init.dtStart : '',\n    //   maxPeople: init.maxPeople ? init.maxPeople : '',\n    //   price: init.price ? init.price : '',\n    //   currency: init.currency ? init.currency : '',\n    //   alcoholIncluded: init.alcoholIncluded ? init.alcoholIncluded : false,\n    //   allMealsIncluded: init.allMealsIncluded ? init.allMealsIncluded : false,\n    //   transfersIncluded: init.transfersIncluded\n    //     ? init.transfersIncluded\n    //     : false,\n    //   flightsIncluded: init.flightsIncluded ? init.flightsIncluded : false,\n    //   gratuitiesIncluded: init.gratuitiesIncluded\n    //     ? init.gratuitiesIncluded\n    //     : false,\n    //   ...this.state.checkBoxesImages.reduce(\n    //     (acc, { name, value }) => ({\n    //       ...acc,\n    //       [name]: value\n    //     }),\n    //     {}\n    //   ),\n    //   ...this.state.checkBoxesImages.reduce(\n    //     (acc, { imageName }) => ({\n    //       ...acc,\n    //       [imageName]: []\n    //     }),\n    //     {}\n    //   )\n    // };\n\n    const {\n      itineraryDays,\n      accomodations,\n      initialValues,\n      checkBoxesImages\n    } = this.state;\n\n    const keys = Object.keys(initialValues);\n    checkBoxesImages.forEach((item) => {\n      if (!keys.includes(item.imageName)) {\n        initialValues[item.imageName] = [];\n      }\n    });\n\n    return (\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={getSchema}\n        onSubmit={this.UpdateTripSubmit}\n        render={() => {\n          return (\n            <Form mode=\"structured\" className=\"form\">\n              <fieldset>\n                <h1>Update an active tour</h1>\n                <div className=\"form__title form__title--sm\">General Info</div>\n                <div className=\"form__container\">\n                  <div className=\"col\">\n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Tour Title</label>\n                      <Input\n                        name=\"title\"\n                        placeholder=\"Tour Title*\"\n                        required\n                        className=\"form__input\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Select a Country</label>\n                      <Select\n                        name=\"country\"\n                        placeholder=\"Select a Country*\"\n                        options={[\n                          { value: 'India', label: 'India' },\n                          { value: 'Iceland', label: 'Iceland' },\n                          { value: 'Argentina', label: 'Argentina' },\n                          { value: 'Phuket', label: 'Phuket' }\n                      ]}\n                      className=\"form__select\"\n                      />\n                    </div>\n                    <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Select a Destination</label>\n                    <Select\n                      name=\"destination\"\n                      placeholder=\"Select a Destination*\"\n                      options={[\n                        { value: 'Rajasthan', label: 'Rajasthan' },\n                        { value: 'Reykjavik', label: 'Reykjavik' },\n                        { value: 'Beunoes Aires', label: 'Beunoes Aires' },\n                        { value: 'Thailand', label: 'Thailand' }\n                      ]}\n                      className=\"form__select\"\n                    />\n                    <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Tour type</label>\n                    <Select\n                      name=\"tourType\"\n                      placeholder=\"Tour type*\"\n                      options={[\n                        { value: 'Easy', label: 'Easy' },\n                        { value: 'Moderate', label: 'Moderate' },\n                        { value: 'Strenuous', label: 'Strenuous' }\n                      ]}\n                      className=\"form__select\"\n                    />\n                    <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Number of days</label>\n                    <Select\n                      name=\"days\"\n                      placeholder=\"Number of days*\"\n                      options={[\n                        { value: '1', label: '1' },\n                        { value: '2', label: '2' },\n                        { value: '3', label: '3' },\n                        { value: '4', label: '4' },\n                        { value: '5', label: '5' },\n                        { value: '6', label: '6' },\n                        { value: '7', label: '7' },\n                        { value: '8', label: '8' },\n                        { value: '9', label: '9' },\n                        { value: '10', label: '10' }\n                      ]}\n                      className=\"form__select\"\n                    />\n                    <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Start Date</label>\n                    <Datepicker\n                      name=\"dtStart\"\n                      dateFormat=\"MM.dd.yyyy\"\n                      placeholder=\"Start Date*\"\n                      className=\"form__input\"\n                    />\n                    <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Maximum people</label>\n\n                    <Select\n                      name=\"maxPeople\"\n                      placeholder=\"Maximum people*\"\n                      options={[\n                        //TODO: Make this dynamic\n                        { value: '1', label: '1' },\n                        { value: '2', label: '2' },\n                        { value: '3', label: '3' },\n                        { value: '4', label: '4' },\n                        { value: '5', label: '5' },\n                        { value: '6', label: '6' },\n                        { value: '7', label: '7' },\n                        { value: '8', label: '8' },\n                        { value: '9', label: '9' },\n                        { value: '10', label: '10' }\n                      ]}\n                      className=\"form__select\"\n                    />\n                    <div className=\"form__container\">\n                      <div>\n                      <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Price</label>\n                      <Input\n                        name=\"price\"\n                        type=\"number\"\n                        placeholder=\"Price*\"\n                        required\n                        className=\"form__input\"\n                      />\n                      </div>\n                      \n                      {/* <div>\n                        <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Currency</label>\n                        <Select\n                          name=\"currency\"\n                          placeholder=\"Currency*\"\n                          options={[\n                            { value: 'USD', label: 'USD' },\n                            { value: 'EUR', label: 'EUR' },\n                            { value: 'GBP', label: 'GBP' }\n                          ]}\n                          className=\"form__select\"\n                        />\n                      </div> */}\n                      \n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <label style={{textAlign:\"left\", width:\"100%\", display:\"block\"}}>Short description</label>\n                    <Textarea\n                      name=\"description\"\n                      className=\"form__textarea\"\n                      // label=\"Short description\"\n                    />\n                  </div>\n                </div>\n\n                <p>Check all that is included in this price:</p>\n                <div className=\"form__checkbox-container\">\n                  {checkBoxesAmenities.map((cb) => (\n                    <Checkbox key={cb.name} name={cb.name} text={cb.text} />\n                  ))}\n                </div>\n\n                <ItinerariesList\n                  days={itineraryDays}\n                  addDay={this.handleAddDayItinerary}\n                  removeDay={this.handleRemoveDayItinerary}\n                  count={itineraryDays.length > 1}\n                />\n\n                <AccomodationsList\n                  accomodations={accomodations}\n                  addDay={this.handleAddDayAccomodation}\n                  removeDay={this.handleRemoveDayAccomodation}\n                  count={accomodations.length !== 0}\n                />\n\n                <div className=\"form__title form__title--sm\">Gallery:</div>\n\n                <p>Check an image to use for your cover photo:</p>\n                {\n                  // TODO: only one checkbox clickable\n                }\n                <div className=\"form__fields-wrapper\">\n                  {this.state.checkBoxesImages.map((cb) => (\n                    <ImageSelect\n                      key={cb.name}\n                      imageName={cb.imageName}\n                      imageSrcName={cb.imageSrcName}\n                      checkBoxName={cb.name}\n                      removePhoto={this.handleRemovePhoto}\n                    />\n                  ))}\n                </div>\n                <div style={{ marginBottom: '1em' }}>\n                  <button onClick={this.handleAddPhoto} className=\"add-btn\">\n                    Add more photo\n                  </button>\n                </div>\n                <SubmitBtn className=\"form__submit-btn\" />\n              </fieldset>\n            </Form>\n          );\n        }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}