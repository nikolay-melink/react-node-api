{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\project4.0\\\\src\\\\components\\\\Signup\\\\SignupUserForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, SubmitBtn } from 'react-formik-ui';\nimport { withRouter } from 'react-router-dom'; // import { SigninForm } from \"../Signin/SigninUserForm\";\n// import validator from 'validator';\n// import * as EmailValidator from 'email-validator';\n\nclass SignupUserForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = (values, actions) => {\n      // SigninForm.si\n      this.SignupUserSubmit(values);\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.SignupUserSubmit = this.SignupUserSubmit.bind(this);\n    this.isLogined = false;\n    this.state = {\n      alertType: \"none\",\n      alertMsg: \"\"\n    };\n  }\n\n  isValidEmailAddress(address) {\n    return !!address.match(/.+@.+/);\n  }\n\n  handleChange(e) {\n    // this.state.email += e;\n    if (this.state.invalidWarning !== \"\") this.setState({\n      invalidWarning: \"\"\n    });\n  }\n\n  SignupUserSubmit(values) {\n    //check if this text is email format\n    if (!this.isValidEmailAddress(values.email)) {\n      this.setState({\n        alertType: \"warn\",\n        alertMsg: \"Please input correct mail\"\n      });\n      return;\n    }\n\n    console.log(this.isLogined);\n    return fetch('https://fototripr.com/api/v1/Users/Register', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": values.email,\n        \"password\": values.password,\n        \"firstName\": values.firstName,\n        \"lastName\": values.lastName\n      })\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"signupOK\");\n        this.setState({\n          invalidWarning: \"\"\n        });\n        response.json().then(data => {\n          this.props.history.push({\n            pathname: \"/signup-supplier\",\n            state: {\n              userId: data.result.id,\n              token: data.result.token,\n              isSignedUpAsUser: true\n            }\n          });\n        });\n        this.setState({\n          alertType: \"pass\",\n          alertMsg: \"Registration successful\"\n        });\n      } else {\n        console.log(\"eorror\");\n        this.setState({\n          alertType: \"warn\",\n          alertMsg: \"Please use another mail\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          alertType = _this$state.alertType,\n          alertMsg = _this$state.alertMsg;\n\n    const getSchema = () => {\n      return yup.object().shape({\n        email: yup.string().required('Email is required'),\n        password: yup.string().required('Password is required')\n      });\n    };\n\n    return React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n      },\n      validationSchema: getSchema,\n      onSubmit: this.onSubmit,\n      render: () => {\n        return React.createElement(Form, {\n          mode: \"structured\",\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"fieldset\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"alert \".concat(alertType),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, alertMsg), React.createElement(\"h1\", {\n          className: \"form__title\",\n          style: {\n            fontSize: \"2em\",\n            textTransform: \"uppercase\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Create an Account\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email*\",\n          required: true,\n          className: \"form__input\" // onChange={(e) => {this.handleChange(e)}}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password*\",\n          required: true,\n          className: \"form__input\" // onChange={(e) => {this.handleChange(e)}}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"error\",\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, this.state.invalidWarning), React.createElement(\"br\", {\n          style: {\n            visibility: 'hidden'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }), React.createElement(SubmitBtn, {\n          className: \"form__submit-btn\",\n          children: \"Get started\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withRouter(SignupUserForm);","map":{"version":3,"sources":["E:\\work\\project4.0\\src\\components\\Signup\\SignupUserForm.js"],"names":["React","Formik","yup","Form","Input","SubmitBtn","withRouter","SignupUserForm","Component","constructor","props","onSubmit","values","actions","SignupUserSubmit","bind","isLogined","state","alertType","alertMsg","isValidEmailAddress","address","match","handleChange","e","invalidWarning","setState","email","console","log","fetch","method","headers","body","JSON","stringify","password","firstName","lastName","then","response","ok","json","data","history","push","pathname","userId","result","id","token","isSignedUpAsUser","catch","err","render","getSchema","object","shape","string","required","fontSize","textTransform","color","visibility"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, SubmitBtn} from 'react-formik-ui';\nimport { withRouter } from 'react-router-dom';\n// import { SigninForm } from \"../Signin/SigninUserForm\";\n// import validator from 'validator';\n// import * as EmailValidator from 'email-validator';\nclass SignupUserForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.onSubmit = this.onSubmit.bind(this);\n    this.SignupUserSubmit = this.SignupUserSubmit.bind(this);\n    this.isLogined = false;\n\n    this.state = {\n      alertType: \"none\",\n      alertMsg: \"\"\n    };\n\n    \n    \n  }\n  isValidEmailAddress(address) {\n    return !!address.match(/.+@.+/);\n}\n  \n  onSubmit = (values, actions) => {\n    // SigninForm.si\n    this.SignupUserSubmit(values);\n  };\n  handleChange (e) {\n    // this.state.email += e;\n    if(this.state.invalidWarning !== \"\")\n      this.setState({invalidWarning:\"\"});\n  }\n\n  SignupUserSubmit(values) {\n\n    //check if this text is email format\n    if(!this.isValidEmailAddress(values.email)){\n      this.setState({alertType:\"warn\", alertMsg:\"Please input correct mail\"});\n      return;\n    }\n\n\nconsole.log(this.isLogined);\n    return fetch('https://fototripr.com/api/v1/Users/Register', {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"email\" : values.email,\n            \"password\" : values.password,\n            \"firstName\" : values.firstName,\n            \"lastName\": values.lastName\n        })\n    }).then((response) => {\n        if (response.ok) {\n            console.log(\"signupOK\");\n            this.setState({invalidWarning:\"\"});\n            response.json().then(data => {\n                this.props.history.push({\n                    pathname:  \"/signup-supplier\",\n                    state: {\n                      userId: data.result.id,\n                      token: data.result.token,\n                      isSignedUpAsUser: true\n                    }\n                });\n            });\n            this.setState({alertType:\"pass\", alertMsg:\"Registration successful\"});\n        } else {\n          console.log(\"eorror\");\n          this.setState({alertType:\"warn\", alertMsg:\"Please use another mail\"});\n        }\n    }).catch((err) => {\n        console.log(err);\n    })\n  }\n\n  render() {\n    const { alertType, alertMsg } = this.state;\n    const getSchema = () => {\n      return yup.object().shape({\n        email: yup\n          .string()\n          .required('Email is required'),\n        password: yup\n          .string()\n          .required('Password is required')\n      });\n    };\n    \n    return(\n        <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          firstName: '',\n          lastName: ''\n        }}\n        validationSchema={getSchema}\n        onSubmit={this.onSubmit}\n        render={() => {\n        return (\n          <Form mode='structured' className=\"form\">\n            <fieldset>\n              {            \n                <div className={`alert ${alertType}`}>{alertMsg}</div>\n              }\n              <h1 className=\"form__title\" style={{fontSize: \"2em\", textTransform: \"uppercase\"}}>\n              Create an Account\n              </h1>\n              <br/>\n                <Input\n                  name='email'\n                  type='email'\n                  placeholder='Email*'\n                  required\n                  className=\"form__input\"\n                  // onChange={(e) => {this.handleChange(e)}}\n                />\n\n                <Input\n                  name='password'\n                  type='password'\n                  placeholder='Password*'\n                  required\n                  className=\"form__input\"\n                  // onChange={(e) => {this.handleChange(e)}}\n                />\n\n                <Input\n                  name='firstName'\n                  placeholder='First Name'\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name='lastName'\n                  placeholder='Last Name'\n                  required\n                  className=\"form__input\"\n                />\n                <span className=\"error\" style={{ color: 'red'}}>{this.state.invalidWarning}</span>\n                <br style={{visibility: 'hidden'}} />\n\n                <SubmitBtn className=\"form__submit-btn\" children=\"Get started\" />\n              </fieldset>\n            </Form>\n          );\n        }}\n      />\n     );\n   }\n}\n\nexport default withRouter(SignupUserForm);"]},"metadata":{},"sourceType":"module"}