{"ast":null,"code":"var _jsxFileName = \"E:\\\\work\\\\project4.0\\\\src\\\\components\\\\Signup\\\\SignupSupplierForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, SubmitBtn } from 'react-formik-ui';\nexport class SignupSupplierForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.SignupSupplierSubmit = this.SignupSupplierSubmit.bind(this);\n    this.state = {\n      alertType: \"none\",\n      alertMsg: \"\"\n    };\n  }\n\n  SignupSupplierSubmit(values) {\n    return fetch('https://fototripr.com/api/v1/TripHosts/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: JSON.stringify({\n        userId: this.props.userId,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        address: values.address,\n        city: values.city,\n        state: values.state,\n        zipCode: values.zipCode,\n        country: values.country,\n        phone: values.phone\n      })\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(data => {\n          this.props.history.push({\n            pathname: '/edit-supplier-profile',\n            state: {\n              userId: this.props.userId,\n              token: this.props.token,\n              isLoggedIn: true\n            }\n          });\n        });\n        this.setState({\n          alertType: \"pass\",\n          alertMsg: \"Registration successful\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        alertType: \"warn\",\n        alertMsg: \"Sorry we can't register you\"\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          alertType = _this$state.alertType,\n          alertMsg = _this$state.alertMsg;\n\n    const getSchema = () => {\n      return yup.object().shape({\n        firstName: yup.string().required('First name is required'),\n        lastName: yup.string().required('Last name is required'),\n        country: yup.string().required('Country is required'),\n        address: yup.string().required('Address is required'),\n        city: yup.string().required('City is required'),\n        state: yup.string().required('State is required'),\n        zipCode: yup.string().required('Post / Zip code is required'),\n        phone: yup.string().required('Phone is required')\n      });\n    };\n\n    return React.createElement(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        country: '',\n        address: '',\n        city: '',\n        state: '',\n        zipCode: '',\n        phone: ''\n      },\n      validationSchema: getSchema,\n      onSubmit: this.SignupSupplierSubmit,\n      render: () => {\n        return React.createElement(Form, {\n          mode: \"structured\",\n          className: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"fieldset\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"alert \".concat(alertType),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, alertMsg), React.createElement(\"div\", {\n          className: \"form__title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Let's get you signed up as a supplier\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"firstName\",\n          placeholder: \"First Name*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"lastName\",\n          placeholder: \"Last Name*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"country\",\n          placeholder: \"Country*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"address\",\n          placeholder: \"Address*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"city\",\n          placeholder: \"City*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"state\",\n          placeholder: \"State*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"zipCode\",\n          placeholder: \"Post / Zip code*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }), React.createElement(Input, {\n          name: \"phone\",\n          placeholder: \"Phone*\",\n          required: true,\n          className: \"form__input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), React.createElement(SubmitBtn, {\n          className: \"form__submit-btn\",\n          children: \"Next\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["E:\\work\\project4.0\\src\\components\\Signup\\SignupSupplierForm.js"],"names":["React","Formik","yup","Form","Input","SubmitBtn","SignupSupplierForm","Component","constructor","props","SignupSupplierSubmit","bind","state","alertType","alertMsg","values","fetch","method","headers","Accept","Authorization","token","body","JSON","stringify","userId","firstName","lastName","address","city","zipCode","country","phone","then","response","ok","json","data","history","push","pathname","isLoggedIn","setState","catch","err","console","log","render","getSchema","object","shape","string","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Input, SubmitBtn } from 'react-formik-ui';\n\nexport class SignupSupplierForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.SignupSupplierSubmit = this.SignupSupplierSubmit.bind(this);\n    this.state = {\n      alertType: \"none\",\n      alertMsg: \"\"\n    };\n  }\n\n  SignupSupplierSubmit(values) {\n    return fetch('https://fototripr.com/api/v1/TripHosts/', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: JSON.stringify({\n        userId: this.props.userId,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        address: values.address,\n        city: values.city,\n        state: values.state,\n        zipCode: values.zipCode,\n        country: values.country,\n        phone: values.phone\n      })\n    })\n      .then((response) => {\n        if (response.ok) {\n          response.json().then((data) => {\n            this.props.history.push({\n              pathname: '/edit-supplier-profile',\n              state: {\n                userId: this.props.userId,\n                token: this.props.token,\n                isLoggedIn: true\n              }\n            });\n          });\n          this.setState({alertType:\"pass\", alertMsg:\"Registration successful\"});\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({alertType:\"warn\", alertMsg:\"Sorry we can't register you\"});\n      });\n  }\n\n  render() {\n    const { alertType, alertMsg } = this.state;\n    const getSchema = () => {\n      return yup.object().shape({\n        firstName: yup.string().required('First name is required'),\n        lastName: yup.string().required('Last name is required'),\n        country: yup.string().required('Country is required'),\n        address: yup.string().required('Address is required'),\n        city: yup.string().required('City is required'),\n        state: yup.string().required('State is required'),\n        zipCode: yup.string().required('Post / Zip code is required'),\n        phone: yup.string().required('Phone is required')\n      });\n    };\n\n    return (\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          country: '',\n          address: '',\n          city: '',\n          state: '',\n          zipCode: '',\n          phone: ''\n        }}\n        validationSchema={getSchema}\n        onSubmit={this.SignupSupplierSubmit}\n        render={() => {\n          return (\n            <Form mode=\"structured\" className=\"form\">\n              <fieldset>\n                {            \n                  <div className={`alert ${alertType}`}>{alertMsg}</div>\n                }\n                <div className=\"form__title\">\n                  Let's get you signed up as a supplier\n                </div>\n                <br />\n\n                <Input\n                  name=\"firstName\"\n                  placeholder=\"First Name*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"lastName\"\n                  placeholder=\"Last Name*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"country\"\n                  placeholder=\"Country*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"address\"\n                  placeholder=\"Address*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"city\"\n                  placeholder=\"City*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"state\"\n                  placeholder=\"State*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"zipCode\"\n                  placeholder=\"Post / Zip code*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <Input\n                  name=\"phone\"\n                  placeholder=\"Phone*\"\n                  required\n                  className=\"form__input\"\n                />\n\n                <SubmitBtn className=\"form__submit-btn\" children=\"Next\" />\n              </fieldset>\n            </Form>\n          );\n        }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}